name: Checkout-Build-Artifact-Scan

on:
  workflow_dispatch:
  schedule:
  - cron: "0 22 * * 1,3,5"

# Checkout, Build, Artifact
jobs:
  Checkout-Build-Artifact:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        working-directory: ./app/
        run: mvn clean install
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
        # Artifact name
          name: verademo.war
          path: app/target/verademo.war

# Submit to Veracode for SAST and SCA scan

  Security-Scan-SAST-SCA:
    runs-on: ubuntu-latest
    needs: Checkout-Build-Artifact
    steps:
      - uses: actions/checkout@v2
      - name: get archive
        uses: actions/download-artifact@v2
        with:
          name: verademo.war
          path: .
      - name: Veracode Upload and Scan Action Step
        uses: veracode/veracode-uploadandscan-action@master
        id: upload_and_scan
        with:
          appname: 'VeraDemo-Java-GitHub'
          createprofile: false
          version: '${{ github.run_id }}-'
          criticality: Medium
          filepath: 'verademo.war'
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
        continue-on-error: true

# Synch Issues into GitHub Issues

  Synch-Issues-to-GitHub:
    runs-on: ubuntu-latest
    needs: Security-Scan-SAST-SCA
    container: 
      image: veracode/api-signing:latest
    steps:
      - name: get policy flaws
        run: |
          cd /tmp
          export VERACODE_API_KEY_ID=${{ secrets.VERACODE_API_ID }}
          export VERACODE_API_KEY_SECRET=${{ secrets.VERACODE_API_KEY }}
          guid=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v1/applications?name=VeraDemo-Java-GitHub" | jq -r '._embedded.applications[0].guid') 
          echo GUID: ${guid}
          total_flaws=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True" | jq -r '.page.total_elements')
          echo TOTAL_FLAWS: ${total_flaws}
          http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=STATIC&violates_policy=True&size=${total_flaws}" > policy_flaws.json
          
          total_sca=$(http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=SCA&violates_policy=True" | jq -r '.page.total_elements')
          echo TOTAL_SCA: ${total_sca}
          http --auth-type veracode_hmac GET "https://api.veracode.com/appsec/v2/applications/${guid}/findings?scan_type=SCA&violates_policy=True&size=${total_sca}" > sca_flaws.json
     
      - name: Synch SAST Security Issues to GitHub Issues
        uses: veracode/veracode-flaws-to-issues@v1
        with:
          scan-results-json: '/tmp/policy_flaws.json'
          github-token: ${{ secrets.GH_TOKEN }}     

      - name: Synch SCA Security Issues to GitHub Issues
        uses: veracode/veracode-flaws-to-issues@v1
        with:
          scan-results-json: '/tmp/sca_flaws.json'
          github-token: ${{ secrets.GH_TOKEN }}    
